create table STUDENTS
(
    STUDENT_NAME VARCHAR2(25),
    CGPA NUMBER
)
/

--Task_1

CREATE OR REPLACE TRIGGER SHOWINSERT
AFTER INSERT 
ON STUDENTS 
FOR EACH ROW
DECLARE 
BEGIN 
	DBMS_OUTPUT.PUT_LINE('The CGPA of Student name ' || :NEW.STUDENT_NAME || ' has been inserted'); 
	DBMS_OUTPUT.PUT_LINE('The CGPA is ' || :NEW.CGPA); 
END ;
/

--Task_2

CREATE OR REPLACE TRIGGER SHOWINSERT
BEFORE INSERT 
ON STUDENTS 
FOR EACH ROW
DECLARE 
BEGIN 
	DBMS_OUTPUT.PUT_LINE('The CGPA of Student name ' || :NEW.STUDENT_NAME || ' has been inserted'); 
	DBMS_OUTPUT.PUT_LINE('The CGPA is ' || :NEW.CGPA); 
END ;
/

--Task_3.1

CREATE OR REPLACE TRIGGER SHOWINSERT
BEFORE INSERT OR DELETE 
ON STUDENTS 
FOR EACH ROW
DECLARE 
BEGIN 
	DBMS_OUTPUT.PUT_LINE('Record has been inserted or deleted'); 
END ;
/

--Task_3.2

CREATE OR REPLACE TRIGGER SHOWINSERT
AFTER INSERT OR DELETE 
ON STUDENTS 
FOR EACH ROW
DECLARE 
BEGIN 
	DBMS_OUTPUT.PUT_LINE('Record has been inserted or deleted'); 
END ;
/


--Task_4

CREATE OR REPLACE TRIGGER SHOWINSERT
AFTER UPDATE 
ON STUDENTS 
FOR EACH ROW
DECLARE 
BEGIN 
	DBMS_OUTPUT.PUT_LINE('CGPA has been updated'); 
END ;
/

--Task_5

CREATE OR REPLACE TRIGGER SHOWINSERT
BEFORE UPDATE 
ON STUDENTS 
FOR EACH ROW
DECLARE 
BEGIN 
	DBMS_OUTPUT.PUT_LINE('CGPA of Student' || :OLD.STUDENT_NAME || ' has been updated with new CGPA ' || :NEW.CGPA); 
	DBMS_OUTPUT.PUT_LINE('The previous CGPA of the student was ' || :OLD.CGPA);  
END ;
/

UPDATE STUDENTS
SET CGPA= CGPA - 0.1*CGPA
WHERE CGPA >= 3.5;

--Task_6

CREATE OR REPLACE TRIGGER LOG_CGPA_UPDATE
BEFORE UPDATE 
ON STUDENTS 
FOR EACH ROW
DECLARE  
	V_USERNAME VARCHAR2(50); 
	V_DATE DATE; 
	O_CGPA NUMBER;  
	N_CGPA NUMBER; 
BEGIN 
	V_USERNAME :=  :OLD.STUDENT_NAME;
	V_DATE := SYSDATE;
	O_CGPA := :OLD.CGPA; 
	N_CGPA := :NEW.CGPA; 
	INSERT INTO LOG_TABLE_CGPA_UPDATE VALUES(V_USERNAME ,V_DATE ,O_CGPA ,N_CGPA);  
END ;
/

--Task_8

CREATE TABLE LOW_CGPA_STUDENTS
(
    STUDENT_NAME VARCHAR2(25)
);

CREATE OR REPLACE TRIGGER LOW_CGPA_TRIGGER
AFTER UPDATE OR INSERT
ON STUDENTS
FOR EACH ROW
DECLARE
BEGIN
	
	IF :NEW.CGPA < 2 THEN
		INSERT INTO LOW_CGPA_STUDENTS VALUES(:NEW.STUDENT_NAME);
	END IF;

END;
/

